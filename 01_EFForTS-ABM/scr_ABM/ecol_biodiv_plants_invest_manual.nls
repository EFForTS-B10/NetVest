;##################################################################################################
;Attempt 1: 
;Initialization: Adjust landuse values (for map generation)
;                Read habitat-relation data relating to research objective
;                Sensitivity-table for research objective -> store in output folder
;                Threats-table
;
;Processes:      Generation of LULC-map
;(per time step) Generation of threat-maps             
;                invoke invest and transfer output
;                read-in habitat-maps for research objective and store them in 2-dimensional list: time step, habitat-qualities for every grid cells
;                Aggregate habitat-quality scores:
;                a) parcel-level contribution to biodiversity (MBV and RMBV)
;                b) for every species and over all species --> landscape-level biodiversity score
;
;Reference:      https://books.google.de/books?id=s-AVDAAAQBAJ&pg=PA234&lpg=PA234&dq=calculate+%22marginal+biodiversity+value%22&source=bl&ots=VizoibzWxq&sig=6yADRPd9HcTj4wknOP2UsUDD6N0&hl=de&sa=X&ved=0ahUKEwibv9OY2IDVAhVGvxQKHXXXD4QQ6AEIMTAC#v=onepage&q=calculate%20%22marginal%20biodiversity%20value%22&f=false
;                Natural Capital - Theory and practice of mapping Ecosystem Services,  Heather Tallis, Taylor H. Ricketts, Gretchen C. Daily, 
;                Documentation: http://releases.naturalcapitalproject.org/invest-userguide/latest/habitat_quality.html#data-needs
;###################################################################################################


;Initialization of Biodiversity Submodule: producing output for Invest
;1.Adjust landuse values from ABM to LULC IDs for invest
;2.Habitat-Relation
;3.Creating sensitivity-table: Senstitivity of LULC types to threats and habitat-relation of LULCs 
;4.Creating threats-table: Threat's importance and impact over space

to biodiv_plants_invest_manual_init
  ;;Adjust landuse for invest
  adjust-lulc-invest
  ;;Habitat-relation with 3 options for research objective
  read-habitat-data
  ;;Sensitivity to threats
  sensitivity-table
  ;;Threat's importance and impact over space
  threat-table
end


;Processes for calculation
;1.Generation of maps
;2.Habitat quality score
;3.Update landscape-level habitat-quality score
to biodiv_plants_invest_manual_update
  lulc-map
  habitat-quality-score ; store in list
  biodiversity-score
end

;*************************************************************
;Adjust landuse-values to LULC IDs for invest                *
;*************************************************************
to adjust-lulc-invest ;; not overwrite, new patch-variable  p_landuse turtles own variable
    
  ;; TEMPORARY ADJUSTMENT:
  ;; The functions use while loops to loop trough landuses: also include roads?
  ; we create a new variable because p_landuse ist still needed for the economic submodel
  ask patches 
  [
    if (p_landuse = -100) [set p_landuse_invest 4] ;forest
    if (p_landuse = 1) [set p_landuse_invest 3] ;rubber
    if (p_landuse = 0) [set p_landuse_invest 2] ;oilplam
    if (p_road = 1 and p_landuse = 4) [set p_landuse_invest 1] ;village
  ]
end

;************************************************************
;Read habitat-relation-data: 3 variants                     *
;************************************************************
to read-habitat-data
  print "Read habitat-relation data..."

  ;; Reset global prob list and global probabilities:
  set habitat_all_probs []
  
  
  ;; Read file depending on research objective
  (ifelse biodiv_invest_objective = "generell"  [set filename_probs "input/plants/generellbiodiversity_probs.txt"]
          biodiv_invest_objective = "modelorg"  [print "Warning: Biodiversity of modelorganism not yet implemented"]
          biodiv_invest_objective = "allplants" [print "Warning: Biodiversity of all plants not yet implemented"])
  ifelse filename_probs = 0 [stop]
  [
  file-open filename_probs
  
  ;;Skip header:
  repeat 5 [let drop file-read]
  ;print file-read
  ;show file-read
  while [not file-at-end?]
  [
    ;;Read data for generell biodiversity and probabilities that LULC is habitat and store them in lists (maybe later shrubland)
    let rownr file-read
    let objective file-read
    set f_prob file-read
    ;let sh_prob file-read
    let o_prob file-read
    let r_prob file-read
    let v_prob file-read
    ;let group file-read
;print rownr
    ;; Create temporary list:  ["p_landuse 0 prob" "p_landuse 1 prob" "..." "p_landuse 4 prob" "objective" ("species-group (general/corespecies))"]
    ;; other= 0, op=1, rm=2, jr=3, fo=4
    let habitat_probs (list v_prob o_prob r_prob f_prob objective) ;sh_prob
    print habitat_probs
    set habitat_all_probs lput habitat_probs habitat_all_probs
    print habitat_all_probs
    ;show f_prob
  ]
  ;print habitat_all_probs
  file-close
  ]
end


To-report habitat-relation
  ;; Summing up all items v_prob, o_prob, r_prob and f_prob over all sublists of the habitat_all_prob lists
  print "Habitat-relation..."
  foreach habitat_all_probs 
    [? ->
      let hr-v 0
      let hr-o 0
      let hr-r 0
      let hr-f 0
      (ifelse sum (item 0 ?) > 0 [set hr-v 1]
             sum (item 1 ?) > 0 [set hr-o 1]
             sum (item 2 ?) > 0 [set hr-r 1]
             sum (item 3 ?) > 0 [set hr-f 1])
      print hr-v
      print hr-o
      print hr-r
      print hr-f
      ;;create temporary list with habitat-relations of LULCs, hr = 0: no habitat, hr = 1: habitat
      let habitat_relation (list hr-v hr-o hr-r hr-f)
      set lulc_habitat_relation lput habitat_relation lulc_habitat_relation 
      print lulc_habitat_relation
  ]
  report lulc_habitat_relation
  
      ;a b] -> let q a + b]
  ;; If reportet items bigger 1, set habitat-relation 1, otherwise 0
  ;if q > 1 [ set q 1]
    ;report capital-stock-cell
end

;foreach plantdiv_all_probs
;  [ ? ->
;    
;    let ws_temp ws_default
;    
;    ;; Check if forest only species:
;    if ((item 4 ? > 0) and (sum (sublist ? 1 4) = 0))
;    [
;      set ws_temp ws_default * ws_bonus
;    ]
;  
;    set ws_list lput ws_temp ws_list
;  ]

;************************************************************
;Create Sensitivity-table                                   *
;************************************************************
to sensitivity-table
  print "Read sensitivity data..."
  print lulc_habitat_relation
  ;;loop through habitat_all_probs
  ;let objective 0
  ;; create habitat-relation-list from habitat_all_probs
  ;(map + items habitat_all_probs)
  
    ;(foreach habitat_all_probs [ [ a b  ] -> let a + b ])
 ;   (map [ [ x y ] -> x mod round y ] xs ys)

  ;map [ element -> element > 0] habitat_all_probs
  ;(foreach habitat_all_probs
 ; [
   ;; [?1] -> let habitat-relation-v 1
    ;[?2 > 0] let habitat-relation-o 1
    ;[?3 > 0] let habitat-relation-r 1
    ;[?4 > 0] let habitat-relation-f 1  
 ; ])
  ;let i length habitat_all_probs
;  let habitat-relation 0 ;length item 0 habitat_all_probs
;  print habitat-relation
;    ;; filter first item of every list item (number of objectives). If one item is >0 set habitat-relation 1
;  ;;reset global sensitivity list
;  set sensitivity_table []
;  ;;read in data for sensitivity (follow up)--> now: set sensitivity value equal for all LULCS (1/6)
;  let filename "input/plants/biodiversityresponse.txt"
;  file-open filename
;  ;;Skip header:
;  repeat 9 [let drop file-read]
;  ;print file-read
;  ;show f_prob
;    while [not file-at-end?] 
;  [
;    ;;Read data for biodiversity response of LULCS and store them in lists
;    let rownr file-read
;    let LULC file-read
;    let NAME file-read
;    let HABITAT ifelse-value (item objective item habitat-relation habitat_all_probs > 0) [1] [0]
;    ;ifelse item objective item habitat-relation habitat_all_probs > 0
;      ;[let HABITAT 1][let HABITAT 0] 
;    let L_Techino file-read
;    let L_Techinr file-read
;    let L_Labino file-read
;    let L_Labinr file-read
;    let oilpalm file-read
;    let rubber file-read
;    let forest file-read 
;    ;; insert habitat-relation from habitat-relation data
;    ;if (item 0 habitat_all_probs != 0) [set HABITAT [item 0] ] ; item 0: forest
;    ;if (f_prob = 1) [set HABITAT 1] ; manage value
;  ;;create temporary list (Threats are named automatically?): ["LULC" "NAME" "Habitat" "L_Techino" "L_Techinr" "L_Labino" "L_Labinr" "oilpalm" "rubber" "forest"]
;  let sensitivity (list LULC NAME HABITAT L_Techino L_Techinr L_Labino L_Labinr oilpalm rubber forest)
;  print sensitivity
;  set sensitivity_table lput sensitivity sensitivity_table 
;  print sensitivity_table
;    ;store with header
;  if habitat-relation <= 3
;      [set habitat-relation habitat-relation + 1]
;  file-close
;  print sensitivity_table ;storing
;  ]
;    set objective objective + 1
;  ]
end


;************************************************************
;Create threat-table                                        *
;************************************************************
to threat-table
end

;############################################################
;PROCESSES
;############################################################
to lulc-map
end
  
to habitat-quality-score ; store in list
end
  
to biodiversity-score
end

;********************************************************************
;Add habitat-relation to sensitivity-table and write file per run   *
;********************************************************************
to sensitivity-habitat
  ;;create temporary list from global sensitivity-table
  ;print sensitivity_table
  ;print habitat_all_probs
  let sensitivity sensitivity_table;(list LULC NAME Hab L_Techino L_Techinr L_Labino L_Labinr oilpalm rubber forest)
  ;print sensitivity
  ;;insert habitat-relation from global prob list (+loop)
  ;print item 0 item 0 habitat_all_probs
  let hab item 0 item 0 habitat_all_probs
  ;print hab
  let auxsensitivity replace-item 2 item 3 sensitivity hab
  print auxsensitivity
  print sensitivity
  set sensitivity replace-item 3 sensitivity auxsensitivity
  print sensitivity
  ;set sensitivity_table lput sensitivity sensitivity_table
  ;print sensitivity_table
  ;if (item 0 habitat_all_probs != 0) [set HABITAT [item 0] ] ; item 0: forest
  ;;Write modified local sensitivity list with header
  write-sensitivity-table 
end

to write-sensitivity-table
  ;;Write file each go for different research objective
  ;; The file has the following structure and prefix of research objective/species:
  ;; LULC NAME HABITAT L_Techino L_Techinr L_Labino L_Labinr L_oil L_rub L_for
  print habitat_all_probs
  let sensitivity_x (word "output/" (word (item 3 item 0 habitat_all_probs)) "_sensitivity.txt")
  
  ;; Delete old file
  if (file-exists? sensitivity_x) [file-delete sensitivity_x]
  ;; Open new file
  file-open sensitivity_x
  ;; Write header
  file-type "LULC"
  file-type ","
  file-type "NAME"
  file-type "," 
  file-type "HABITAT"
  file-type ","
  file-type "L_Techino"
  file-type ","
  file-type "L_Techinr"
  file-type ","
  file-type "L_Labino"
  file-type ","
  file-type "L_Labinr"
  file-type ","
  file-type "L_oil"
  file-type ","
  file-type "L_rub"
  file-type ","
  file-type "L_for"
  file-close
  
  ;; Open the file for writing
  file-open sensitivity_x
  
  ;; Write the sensitivity data to the file:
  ;foreach sensitivity
  ;file-type item 0
  ;file-type ","
  ;file-type item 1
  ;file-type "," 
  ;file-type item 2
  ;file-type ","
  ;file-type item 3
  ;file-type ","
  ;file-type item 4
  ;file-type ","
  ;file-type item 5
  ;file-type ","
  ;file-type item 6
  ;file-type ","
  ;file-type item 7
  ;file-type ","
  ;file-type item 8
  ;file-type ","
  ;file-type item 9
  
  ;; Close the file
  ;file-close 
end

