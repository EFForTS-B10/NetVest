;##################################################################################################
;Attempt 1: 
;Initialization: Adjust landuse values
;                Read habitat-relation data relating to research objective
;                Threats-table
;
;Processes:      Generation of LULC-map
;(per time step) Generation of threat-maps
;                loop
;                (
;                Sensitivity-table for speciesx/objectivex
;                invoke invest and transfer output
;                read-in habitat-maps for speciesx
;                )
;  
;Outcome:        for every species/objective own habitat-score for every time step
;
;Backround: Invest needs one sensitivity-table for one run, therefore every species needs own sensitivity-table, otherwise we would mix habitat-relations
;
; Attempt 2: create sensitivity-tables at initialization and say invest to do as much runs as sensitivity-tables and use every sensitivity-table once (Nils)
;###################################################################################################


;Initialization of Biodiversity Submodule: producing output for Invest
;1.Adjust landuse values from ABM to LULC IDs for invest
;2.Habitat-Relation
;3.Sensitivity-table without habitat-relation
;4.Threat's importance and impact over space
to init-invest-biodiv
  ;;Adjust landuse for invest
  adjust-lulc-invest
  ;;Habitat-relation with 3 options for research objective
  read-habitat-data
  ;;Sensitivity to threats
  sensitivity-table
  ;;Threat's importance and impact over space
  threat-table
end


;Processes for calculation
;1.Generation of maps
;2.Sensitivity of LULC-types to threat
;3.Habitat quality score
;4.Update landscape-level habitat-quality score
to update-invest-biodiv
  sensitivity-habitat
end

;*************************************************************
;Adjust landuse-values to LULC IDs for invest                *
;*************************************************************
to adjust-lulc-invest
    
  ;; TEMPORARY ADJUSTMENT:
  ;; The functions use while loops to loop trough landuses: also include roads?
  ; we create a new variable because p_landuse ist still needed for the simulation
  ask patches 
  [
    if (p_landuse = -100) [set p_landuse 4] ;forest
    if (p_landuse = 1) [set p_landuse 3] ;rubber
    if (p_landuse = 0) [set p_landuse 2] ;oilplam
    if (p_road = 1 and p_landuse = 4) [set p_landuse 1] ;village
  ]
end

;************************************************************
;Read habitat-relation-data: 3 variants                     *
;************************************************************
to read-habitat-data
  print "Read habitat-relation data..."

  ;; Reset global prob list and global probabilities:
  set habitat_all_probs []
  
  
  ;; Read file depending on research objective
  ;set filename_probs ""
  if (generell-biodiv?) [set filename_probs "input/plants/generellbiodiversity_probs.txt"]
  if (modelorg-biodiv?) []
  if (allplants-biodiv?)[]
  file-open filename_probs
  
  ;;Skip header:
  repeat 4 [let drop file-read]
  ;print file-read
  ;show file-read
  while [not file-at-end?]
  [
    ;;Read data for generell biodiversity and probabilities that LULC is habitat and store them in lists (maybe later shrubland)
    let rownr file-read
    let objective file-read
    set f_prob file-read
    ;let sh_prob file-read
    let o_prob file-read
    let r_prob file-read
    ;let group file-read
;print rownr
    ;; Create temporary list:  ["p_landuse 0 prob" "p_landuse 1 prob" "..." "p_landuse 4 prob" "objective" ("species-group (general/corespecies))"]
    ;; other= 0, op=1, rm=2, jr=3, fo=4
    let habitat_probs (list f_prob o_prob r_prob objective) ;sh_prob
    print habitat_probs
    set habitat_all_probs lput habitat_probs habitat_all_probs
    print habitat_all_probs
    ;show f_prob
  ]
  ;print habitat_all_probs
  file-close
end

;************************************************************
;Create Sensitivity-table                                   *
;************************************************************
to sensitivity-table
  print "Read sensitivity data..."
  ;;reset global sensitivity list
  set sensitivity_table []
  ;;read in data for sensitivity (follow up)--> now: set sensitivity value equal for all LULCS (1/6)
  let filename "input/plants/biodiversityresponse.txt"
  file-open filename
  ;;Skip header:
  repeat 9 [let drop file-read]
  ;print file-read
  ;show f_prob
  while [not file-at-end?]
  [
    ;;Read data for biodiversity response of LULCS and store them in lists
    let rownr file-read
    let LULC file-read
    let NAME file-read
    let hab 0
    let L_Techino file-read
    let L_Techinr file-read
    let L_Labino file-read
    let L_Labinr file-read
    let oilpalm file-read
    let rubber file-read
    let forest file-read 
    ;; insert habitat-relation from habitat-relation data
    ;if (item 0 habitat_all_probs != 0) [set HABITAT [item 0] ] ; item 0: forest
    ;if (f_prob = 1) [set HABITAT 1] ; manage value
  ;;create temporary list (Threats are named automatically?): ["LULC" "NAME" "Habitat" "L_Techino" "L_Techinr" "L_Labino" "L_Labinr" "oilpalm" "rubber" "forest"]
  let sensitivity (list LULC NAME Hab L_Techino L_Techinr L_Labino L_Labinr oilpalm rubber forest)
  print sensitivity
  set sensitivity_table lput sensitivity sensitivity_table 
  print sensitivity_table
    ;store with header
  ]
  file-close
  print sensitivity_table
end


;************************************************************
;Create threat-table                                        *
;************************************************************
to threat-table
end

;********************************************************************
;Add habitat-relation to sensitivity-table and write file per run   *
;********************************************************************
to sensitivity-habitat
  ;;create temporary list from global sensitivity-table
  ;print sensitivity_table
  ;print habitat_all_probs
  let sensitivity sensitivity_table;(list LULC NAME Hab L_Techino L_Techinr L_Labino L_Labinr oilpalm rubber forest)
  ;print sensitivity
  ;;insert habitat-relation from global prob list (+loop)
  ;print item 0 item 0 habitat_all_probs
  let hab item 0 item 0 habitat_all_probs
  ;print hab
  let auxsensitivity replace-item 2 item 3 sensitivity hab
  print auxsensitivity
  print sensitivity
  set sensitivity replace-item 3 sensitivity auxsensitivity
  print sensitivity
  ;set sensitivity_table lput sensitivity sensitivity_table
  ;print sensitivity_table
  ;if (item 0 habitat_all_probs != 0) [set HABITAT [item 0] ] ; item 0: forest
  ;;Write modified local sensitivity list with header
  write-sensitivity-table 
end

to write-sensitivity-table
  ;;Write file each go for different research objective
  ;; The file has the following structure and prefix of research objective/species:
  ;; LULC NAME HABITAT L_Techino L_Techinr L_Labino L_Labinr L_oil L_rub L_for
  print habitat_all_probs
  let sensitivity_x (word "output/" (word (item 3 item 0 habitat_all_probs)) "_sensitivity.txt")
  
  ;; Delete old file
  if (file-exists? sensitivity_x) [file-delete sensitivity_x]
  ;; Open new file
  file-open sensitivity_x
  ;; Write header
  file-type "LULC"
  file-type ","
  file-type "NAME"
  file-type "," 
  file-type "HABITAT"
  file-type ","
  file-type "L_Techino"
  file-type ","
  file-type "L_Techinr"
  file-type ","
  file-type "L_Labino"
  file-type ","
  file-type "L_Labinr"
  file-type ","
  file-type "L_oil"
  file-type ","
  file-type "L_rub"
  file-type ","
  file-type "L_for"
  file-close
  
  ;; Open the file for writing
  file-open sensitivity_x
  
  ;; Write the sensitivity data to the file:
  ;foreach sensitivity
  ;file-type item 0
  ;file-type ","
  ;file-type item 1
  ;file-type "," 
  ;file-type item 2
  ;file-type ","
  ;file-type item 3
  ;file-type ","
  ;file-type item 4
  ;file-type ","
  ;file-type item 5
  ;file-type ","
  ;file-type item 6
  ;file-type ","
  ;file-type item 7
  ;file-type ","
  ;file-type item 8
  ;file-type ","
  ;file-type item 9
  
  ;; Close the file
  ;file-close 
end

