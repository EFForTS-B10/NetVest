to test-invest
  print["testing invest"]
   ;; definition of experiment name and working directory
   let experiment inv-test
	print (word "experiment:"experiment)
   ;; clear all
   ca 
	 let workdir word "/home/dockerj/EFForTS-ABM/01_EFForTS-ABM/tests_integration/01_unittest/" experiment
  print ( word "workdir:" workdir)
  let k 0.5
	 ;; setup python, load invest package (defined in ecol_biodiv_natcap_invest.nls)
	 natcap_invest_set_up_invest 
	 ;; load sensitivity table and impact table and store as csv-table (defined in ecol_biodiv_natcap_invest.nls)
	 natcap_invest_write_tables  workdir
   ;; lulc.asc, oilpalm_c.asc and rubber_c.asc considered input for testing
   natcap_invest_file_copy_tif workdir "lulc"
   natcap_invest_file_copy_tif workdir "oilpalm_c"
   natcap_invest_file_copy_tif workdir "rubber_c"
   ;; convert asc files from output folder to tif files
   natcap_invest_convert_maps_tif workdir ;file_conv?  
   ;; execution of Invest with working directory of InVEST
   let invest_wd word workdir "/output"
  print (word "invest_wd:" invest_wd)
   natcap_invest_execute_invest invest_wd experiment k ;expects working_directory, 'sensitivity_table.csv' 'impact_table.csv' 'lulc.tif'
   natcap_invest_convert_maps_asc workdir experiment
                                                     ;natcap_invest_validation workdir experiment
  print ["Success"]
  print ["Success"]
                                                     ;    save-habitat-quality-to-patch "tests/invest_input" "test"
                                                      ;aggregate-habitat-quality
end

to natcap_invest_file_copy_tif [workdir file]
  print ["Copying files from input to output folder"]
    let file_in   (word  workdir "/input/" file ".asc") 
    print file_in
    let file_out   (word  workdir "/output/" file ".asc")  
    print file_out
    let file_conv  (word  workdir "/output/" file)  

    py:set "file_in" file_in
    py:set "file_out" file_out
    py:run "from shutil import copyfile"
    py:run "copyfile(file_in, file_out)"
    print (word "copied to file_out:" file_out)
end

;to natcap_invest_validation [workdir experiment]
;print ["validation of results"]
;let expected_invest matrix:make-constant 100 100 1
;print matrix:pretty-print-text expected_invest


;let filename (word workdir "/output/quality_c_" experiment ".asc")
;let hq gis:load-dataset filename 
;let m1 matrix:from-column-list hq
;let x gis:envelope-of hq
;print x
;let y gis:raster-sample hq x
;print y


;file-open "data/my-folder/my-file.asc"
 ;let temp []
 ;repeat 6 [let header file-read-line] ; skip first 6 lines of header
 ;while [file-not-at-end?][
 ;      set temp lput file-read temp 
;]
 ;file-close

;let result_invest gis:load-dataset filename
;print result_invest
;gis:feature-list-of filename
;let result_invest []

 ;print (word "habitatquality result:" filename)
  ;ifelse filename = 0 [stop]
  ;[
  ;file-open filename
  ;repeat 6 [let header file-read-line]
  ;while [not file-at-end?]
  ;[
   ;set result_invest lput file-read result_invest
  

    ;; Generate temporary -list
    ;let result (list hq)
    ;set result_invest lput result result_invest
    ;print result_invest
    ;]
    ;file-close
    ;]
;end

to do-nothing ;because nlrx demands to run an additional function
end