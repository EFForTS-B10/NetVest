to test-invest
   print["testing invest"]
   let experiment inv-test
	 print (experiment)
   ca ;clear all
	 let workdir word "/home/dockerj/EFForTS-ABM/01_EFForTS-ABM/tests_integration/01_unittest/" experiment
   print ( word "workdir:" workdir)
	 natcap_invest_set_up_invest ;setup python, load invest package (defined in ecol_biodiv_natcap_invest.nls)
	 natcap_invest_write_tables  workdir

; lulc.asc, oilpalm_c.asc, rubber_c.asc considered input for testing
    file-copy-tif workdir "lulc"
    file-copy-tif workdir "oilpalm_c"
    file-copy-tif workdir "rubber_c"

    let invest_wd word workdir "/output"
    natcap_invest_execute_invest invest_wd experiment ;expects working_directory, 'sensitivity_table.csv' 'impact_table.csv' 'lulc.tif'
    natcap_invest_convert_maps_asc workdir experiment
    print ["Success"]
    print ["Success"]
;    save-habitat-quality-to-patch "tests/invest_input" "test"
;    ;aggregate-habitat-quality
end

to file-copy-tif [workdir file]
    let file_in   (word  workdir "/input/" file ".asc") 
    print file_in
    let file_out   (word  workdir "/output/" file ".asc")  
    print file_out
    let file_conv  (word  workdir "/output/" file)  

    py:set "file_in" file_in
    py:set "file_out" file_out
    py:run "from shutil import copyfile"
    py:run "copyfile(file_in, file_out)"
    print (word "copied to file_out:" file_out)
    natcap_invest_convert_maps_tif workdir
end

to do-nothing ;because nlrx demands to run an additional function
end